// Code generated by MockGen. DO NOT EDIT.
// Source: internal/cache_imp/cache.go

// Package mock_cache_imp is a generated GoMock package.
package mock_cache_imp

import (
	"github.com/google/uuid"
	"github.com/tumbleweedd/two_services_system/order_service/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCacheI is a mock of CacheI interface.
type MockCacheI struct {
	ctrl     *gomock.Controller
	recorder *MockCacheIMockRecorder
}

// MockCacheIMockRecorder is the mock recorder for MockCacheI.
type MockCacheIMockRecorder struct {
	mock *MockCacheI
}

// NewMockCacheI creates a new mock instance.
func NewMockCacheI(ctrl *gomock.Controller) *MockCacheI {
	mock := &MockCacheI{ctrl: ctrl}
	mock.recorder = &MockCacheIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheI) EXPECT() *MockCacheIMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockCacheI) Add(key uuid.UUID, value *models.Order) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", key, value)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockCacheIMockRecorder) Add(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockCacheI)(nil).Add), key, value)
}

// Get mocks base method.
func (m *MockCacheI) Get(key uuid.UUID) (*models.Order, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(*models.Order)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCacheIMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCacheI)(nil).Get), key)
}
